//
//  OneOf.swift
//
//
//  Created by Mikhail Maslo on 26.09.23.
//

/**
 A macro for generating `Encodable` and `Decodable` conformances for enums that have a one-of relationship, as specified by the OpenAPI `oneOf` specification.

 This macro is applicable only to enums with a single associated value. The enum case name will be used as the `oneOf` key.

 - Important: If a type already conforms to `Encodable`, no `Encodable` conformance will be generated by this macro.
 - Important: If a type already conforms to `Decodable`, no `Decodable` conformance will be generated.

 - Example:
    ```swift
    @OneOfCodable
    enum Example {
        case int(Int)
        case boolean(Bool)
        case string(String)
    }
    // Usage:
    // A JSON like: {"int": 100}, {"boolean": true}, or {"string": "Hello world"} will be decoded to `Example`
    // Encoding an instance of `Example` will result in JSON like: {"int": 100}, {"boolean": true}, or {"string": "Hello world"} depending on the case and associated value.
    ```

 - SeeAlso: `OneOfCodableMacro`
 */
@attached(extension, conformances: Decodable, Encodable, names: named(CodingKeys), named(init(from:)), named(encode(to:)))
public macro OneOfCodable() = #externalMacro(module: "Macro", type: "OneOfCodableMacro")

/**
 A macro for generating `Decodable` conformances for enums that have a one-of relationship, as specified by the OpenAPI `oneOf` specification.

 This macro is applicable only to enums with a single associated value. The enum case name will be used as the `oneOf` key.

 - Important: If a type already conforms to `Decodable`, no `Decodable` conformance will be generated.

 - Example:
    ```swift
    @OneOfDecodable
    enum Example {
        case int(Int)
        case boolean(Bool)
        case string(String)
    }
    // Usage:
    // A JSON like: {"int": 100}, {"boolean": true}, or {"string": "Hello world"} will be decoded to `Example`
    ```

 - SeeAlso: `OneOfDecodableMacro`
 */
@attached(extension, conformances: Decodable, names: named(CodingKeys), named(init(from:)))
public macro OneOfDecodable() = #externalMacro(module: "Macro", type: "OneOfDecodableMacro")

/**
 A macro for generating `Decodable` conformances for enums that have a one-of relationship, as specified by the OpenAPI `oneOf` specification.

 This macro is applicable only to enums with a single associated value. The enum case name will be used as the `oneOf` key.

 - Important: If a type already conforms to `Encodable`, no `Encodable` conformance will be generated.

 - Example:
    ```swift
    @OneOfEncodable
    enum Example {
        case int(Int)
        case boolean(Bool)
        case string(String)
    }
    // Usage:
    // Encoding an instance of `Example` will result in JSON like: {"int": 100}, {"boolean": true}, or {"string": "Hello world"} depending on the case and associated value.
    ```

 - SeeAlso: `OneOfEncodableMacro`
 */
@attached(extension, conformances: Encodable, names: named(CodingKeys), named(encode(to:)))
public macro OneOfEncodable() = #externalMacro(module: "Macro", type: "OneOfEncodableMacro")
